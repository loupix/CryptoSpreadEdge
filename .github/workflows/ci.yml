name: CI

on:
  push:
    branches: [ main, master, develop, dev, feature/** ]
  pull_request:
    branches: [ main, master, develop, dev ]

jobs:
  tests:
    name: Tests unitaires et intégration (${{ matrix.os }} | py${{ matrix.python }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python: ['3.11']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python }}
          channels: conda-forge,defaults
          channel-priority: true

      - name: Créer l'environnement (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        shell: bash -l {0}
        run: |
          conda env update -n test-env -f environment-dev.yml
          conda activate test-env
          python -m pip install -r requirements.txt

      - name: Créer l'environnement (Windows)
        if: startsWith(matrix.os, 'windows')
        shell: powershell
        run: |
          conda env update -n test-env -f environment-dev-windows.yml
          conda activate test-env
          python -m pip install -r requirements.txt

      - name: Afficher versions
        shell: bash -l {0}
        run: |
          python --version
          pip --version
          pytest --version

      - name: Lancer tests unitaires
        env:
          PYTHONPATH: ${{ github.workspace }}/src
        shell: bash -l {0}
        run: |
          python -m pytest -q tests/unit

      - name: Lancer tests d'intégration
        env:
          PYTHONPATH: ${{ github.workspace }}/src
        shell: bash -l {0}
        run: |
          python -m pytest -q tests/integration

      # Les tests e2e sont optionnels et peuvent nécessiter une CLI ou des secrets
      - name: Lancer tests e2e (optionnel - ignorés si absents)
        if: false
        env:
          PYTHONPATH: ${{ github.workspace }}/src
        shell: bash -l {0}
        run: |
          python -m pytest -q tests/e2e

