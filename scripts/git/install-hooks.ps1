# Installation des hooks Git pour CryptoSpreadEdge (Windows)

Write-Host "üîß Installation des hooks Git pour CryptoSpreadEdge..." -ForegroundColor Green

# V√©rifier que nous sommes dans un repository Git
if (!(Test-Path ".git")) {
    Write-Host "‚ùå Ce n'est pas un repository Git" -ForegroundColor Red
    exit 1
}

# Cr√©er le r√©pertoire des hooks s'il n'existe pas
New-Item -ItemType Directory -Path ".git\hooks" -Force | Out-Null

# Copier les hooks
Write-Host "üìã Copie des hooks..." -ForegroundColor Blue

# Pre-commit
Copy-Item "scripts\git\hooks\pre-commit" ".git\hooks\pre-commit" -Force
Write-Host "‚úÖ Hook pre-commit install√©" -ForegroundColor Green

# Post-commit
Copy-Item "scripts\git\hooks\post-commit" ".git\hooks\post-commit" -Force
Write-Host "‚úÖ Hook post-commit install√©" -ForegroundColor Green

# Pre-push
Copy-Item "scripts\git\hooks\pre-push" ".git\hooks\pre-push" -Force
Write-Host "‚úÖ Hook pre-push install√©" -ForegroundColor Green

# Cr√©er un hook de mise √† jour automatique
$postMergeContent = @'
#!/bin/bash
# Hook post-merge pour CryptoSpreadEdge

echo "üîÑ Mise √† jour d√©tect√©e..."

# V√©rifier si les d√©pendances ont chang√©
if git diff HEAD@{1} --name-only | grep -q "requirements.txt\|environment.*\.yml"; then
    echo "üì¶ D√©pendances mises √† jour d√©tect√©es"
    echo "üí° Vous devriez mettre √† jour votre environnement conda:"
    echo "   conda env update -f environment-dev.yml"
fi

# V√©rifier si la configuration a chang√©
if git diff HEAD@{1} --name-only | grep -q "config/"; then
    echo "‚öôÔ∏è  Configuration mise √† jour d√©tect√©e"
    echo "üí° V√©rifiez votre fichier .env"
fi

echo "‚úÖ Mise √† jour termin√©e"
'@

$postMergeContent | Out-File -FilePath ".git\hooks\post-merge" -Encoding UTF8
Write-Host "‚úÖ Hook post-merge install√©" -ForegroundColor Green

# Cr√©er un hook de checkout pour changer d'environnement
$postCheckoutContent = @'
#!/bin/bash
# Hook post-checkout pour CryptoSpreadEdge

echo "üåø Changement de branche d√©tect√©..."

# V√©rifier l'environnement conda
if [[ -n "$CONDA_DEFAULT_ENV" ]]; then
    echo "üêç Environnement conda actuel: $CONDA_DEFAULT_ENV"
    
    # Sugg√©rer l'environnement appropri√©
    branch=$(git branch --show-current)
    if [[ $branch == "master" ]] || [[ $branch == "main" ]]; then
        echo "üí° Branche principale - Utilisez l'environnement de production"
        echo "   conda activate cryptospreadedge-prod"
    elif [[ $branch == "develop" ]]; then
        echo "üí° Branche de d√©veloppement - Utilisez l'environnement de d√©veloppement"
        echo "   conda activate cryptospreadedge-dev"
    else
        echo "üí° Branche de fonctionnalit√© - Utilisez l'environnement de d√©veloppement"
        echo "   conda activate cryptospreadedge-dev"
    fi
else
    echo "‚ö†Ô∏è  Aucun environnement conda activ√©"
    echo "üí° Activez un environnement: conda activate cryptospreadedge-dev"
fi

echo "‚úÖ Checkout termin√©"
'@

$postCheckoutContent | Out-File -FilePath ".git\hooks\post-checkout" -Encoding UTF8
Write-Host "‚úÖ Hook post-checkout install√©" -ForegroundColor Green

Write-Host ""
Write-Host "üéâ Hooks Git install√©s avec succ√®s!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Hooks install√©s:" -ForegroundColor Cyan
Write-Host "  - pre-commit: V√©rifications avant commit" -ForegroundColor White
Write-Host "  - post-commit: Actions apr√®s commit" -ForegroundColor White
Write-Host "  - pre-push: V√©rifications avant push" -ForegroundColor White
Write-Host "  - post-merge: Actions apr√®s merge" -ForegroundColor White
Write-Host "  - post-checkout: Actions apr√®s checkout" -ForegroundColor White
Write-Host ""
Write-Host "üí° Pour d√©sinstaller les hooks:" -ForegroundColor Yellow
Write-Host "   Remove-Item .git\hooks\pre-commit, .git\hooks\post-commit, .git\hooks\pre-push, .git\hooks\post-merge, .git\hooks\post-checkout" -ForegroundColor White